require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe 'fpl_teams/:fpl_team_id/fpl_team_lists', :no_transaction, type: :request do
  let(:fpl_team) { create :fpl_team }

  before { api.authenticate(fpl_team.owner) }

  describe 'GET /index' do
    let(:round) { create :round, :current, deadline_time: 2.weeks.from_now }
    let(:fpl_team_list) { create :fpl_team_list, fpl_team: fpl_team, round: round }
    let(:team1) { create :team }
    let(:team2) { create :team }
    let(:team3) { create :team }
    let(:team4) { create :team }
    let(:fixture1) { create :fixture, round: round, home_team: team1, away_team: team3 }
    let(:fixture2) { create :fixture, round: round, away_team: team2 }
    let(:fixture3) { create :fixture, round: round, away_team: team1 }
    let!(:fixture4) { create :fixture, round: round, home_team: team4 }
    let(:player1) do
      create(
        :player,
        :midfielder,
        team: team1,
        history: [
          {
            'round' => round.external_id,
            'fixture' => fixture1.external_id,
            'minutes' => 90,
            'goals_scored' => 1,
            'total_points' => 11,
            'assists' => 1,
            'bonus' => 3,
          },
          {
            'round' => round.external_id, # Two fixtures in the same round
            'fixture' => fixture3.external_id,
            'minutes' => 70,
            'total_points' => 1,
            'goals_scored' => 0,
            'assists' => 0,
            'yellow_cards' => 1,
          },
        ],
      )
    end
    let(:player2) do
      create(
        :player,
        :defender,
        team: team2,
        history: [
          {
            'round' => round.external_id,
            'fixture' => fixture2.external_id,
            'minutes' => 90,
            'total_points' => 8,
            'goals_scored' => 0,
            'assists' => 0,
            'clean_sheets' => 1,
            'bonus' => 2,
          },
        ],
      )
    end
    let(:player3) do
      create(
        :player,
        :forward,
        team: team3,
        history: [
          {
            'round' => round.external_id,
            'fixture' => fixture1.external_id,
            'minutes' => 0,
            'total_points' => 0,
            'goals_scored' => 0,
            'assists' => 0,
            'clean_sheets' => 0,
            'bonus' => 0,
          },
        ],
      )
    end
    let(:player4) { create :player, :forward, team: team4 }
    let!(:list_position1) { create :list_position, :starting, fpl_team_list: fpl_team_list, player: player1 }
    let!(:list_position2) { create :list_position, :substitute_1, fpl_team_list: fpl_team_list, player: player2 }
    let!(:list_position3) { create :list_position, fpl_team_list: fpl_team_list, player: player3 }
    let!(:list_position4) { create :list_position, :substitute_2, fpl_team_list: fpl_team_list, player: player4 }

    it 'returns a list of player details for the round along with their scores' do
      api.get api_fpl_team_list_list_positions_url(fpl_team_list)

      expect(api.response).to have_http_status(:success)

      expect(api.data).to match(
        [
          a_hash_including(
            'player' => a_hash_including(
              'id' => player3.to_param,
              'first_name' => player3.first_name,
              'last_name' => player3.last_name,
            ),
            'role_str' => 'Starting',
            'position' => a_hash_including(
              'id' => player3.position.to_param,
              'singular_name_short' => player3.position.singular_name_short,
            ),
            'team' => a_hash_including(
              'id' => team3.to_param,
              'short_name' => team3.short_name,
            ),
            'opponent' => a_hash_including(
              'id' => team1.to_param,
              'short_name' => team1.short_name,
            ),
            'minutes' => 0,
            'total_points' => 0,
            'goals_scored' => 0,
            'assists' => 0,
            'clean_sheets' => 0,
            'bonus' => 0,
            'leg' => 'A',
          ),
          a_hash_including(
            'player' => a_hash_including(
              'id' => player1.to_param,
              'first_name' => player1.first_name,
              'last_name' => player1.last_name,
            ),
            'role_str' => 'Starting',
            'position' => a_hash_including(
              'id' => player1.position.to_param,
              'singular_name_short' => player1.position.singular_name_short,
            ),
            'team' => a_hash_including(
              'id' => team1.to_param,
              'short_name' => team1.short_name,
            ),
            'opponent' => a_hash_including(
              'id' => team3.to_param,
              'short_name' => team3.short_name,
            ),
            'minutes' => 90,
            'goals_scored' => 1,
            'total_points' => 11,
            'assists' => 1,
            'bonus' => 3,
            'leg' => 'H',
          ),
          a_hash_including(
            'player' => a_hash_including(
              'id' => player1.to_param,
              'first_name' => player1.first_name,
              'last_name' => player1.last_name,
            ),
            'role_str' => 'Starting',
            'position' => a_hash_including(
              'id' => player1.position.to_param,
              'singular_name_short' => player1.position.singular_name_short,
            ),
            'team' => a_hash_including(
              'id' => team1.to_param,
              'short_name' => team1.short_name,
            ),
            'opponent' => a_hash_including(
              'id' => fixture3.home_team.to_param,
              'short_name' => fixture3.home_team.short_name,
            ),
            'minutes' => 70,
            'total_points' => 1,
            'goals_scored' => 0,
            'assists' => 0,
            'yellow_cards' => 1,
            'leg' => 'A',
          ),
          a_hash_including(
            'player' => a_hash_including(
              'id' => player2.to_param,
              'first_name' => player2.first_name,
              'last_name' => player2.last_name,
            ),
            'team' => a_hash_including(
              'id' => team2.to_param,
              'short_name' => team2.short_name,
            ),
            'opponent' => a_hash_including(
              'id' => fixture2.home_team.to_param,
              'short_name' => fixture2.home_team.short_name,
            ),
            'role_str' => 'S1',
            'position' => a_hash_including(
              'id' => player2.position.to_param,
              'singular_name_short' => player2.position.singular_name_short,
            ),
            'minutes' => 90,
            'total_points' => 8,
            'goals_scored' => 0,
            'assists' => 0,
            'clean_sheets' => 1,
            'bonus' => 2,
            'leg' => 'A',
          ),
          a_hash_including(
            'player' => a_hash_including(
              'id' => player4.to_param,
              'first_name' => player4.first_name,
              'last_name' => player4.last_name,
            ),
            'team' => a_hash_including(
              'id' => team4.to_param,
              'short_name' => team4.short_name,
            ),
            'opponent' => a_hash_including(
              'id' => fixture4.away_team.to_param,
              'short_name' => fixture4.away_team.short_name,
            ),
            'role_str' => 'S2',
            'position' => a_hash_including(
              'id' => player4.position.to_param,
              'singular_name_short' => player4.position.singular_name_short,
            ),
            'leg' => 'H',
          ),
        ],
      )
    end

    it 'excludes players listed in excluded_player_ids' do
      api.get api_fpl_team_list_list_positions_url(fpl_team_list),
              params: { filter: { excluded_player_ids: "#{player1.to_param},#{player4.to_param}" } }

      expect(api.data).to contain_exactly(
        a_hash_including('id' => list_position2.to_param),
        a_hash_including('id' => list_position3.to_param),
      )
    end
  end
end
