require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe 'leagues/:league_id/mini_draft_picks', :no_transaction, type: :request do
  let(:league) { create :league }
  let(:fpl_team1) { create :fpl_team, league: league }
  let(:fpl_team2) { create :fpl_team, league: league }
  let!(:mini_draft_pick1) { create :mini_draft_pick, pick_number: 1, fpl_team: fpl_team1 }
  let!(:mini_draft_pick2) { create :mini_draft_pick, :passed, pick_number: 2, fpl_team: fpl_team2 }
  let!(:mini_draft_pick3) { create :mini_draft_pick, :passed, :winter, pick_number: 1, fpl_team: fpl_team1 }
  let!(:mini_draft_pick4) { create :mini_draft_pick, :winter, pick_number: 2, fpl_team: fpl_team2 }

  before { api.authenticate fpl_team1.owner }

  describe 'GET /index' do
    it 'renders a list of the mini draft_picks by season' do
      api.get api_league_mini_draft_picks_url(league), params: { mini_draft_pick: { season: 'summer' } }

      expect(api.response).to have_http_status(:success)
      expect(api.data).to match(
        [
          a_hash_including(
            'id' => mini_draft_pick1.to_param,
            'out_player' => a_hash_including(
              'id' => mini_draft_pick1.out_player.to_param,
              'first_name' => mini_draft_pick1.out_player.first_name,
              'last_name' => mini_draft_pick1.out_player.last_name,
            ),
            'in_player' => a_hash_including(
              'id' => mini_draft_pick1.in_player.to_param,
              'first_name' => mini_draft_pick1.in_player.first_name,
              'last_name' => mini_draft_pick1.in_player.last_name,
            ),
            'out_team' => a_hash_including(
              'id' => mini_draft_pick1.out_player.team.to_param,
              'short_name' => mini_draft_pick1.out_player.team.short_name,
            ),
            'in_team' => a_hash_including(
              'id' => mini_draft_pick1.in_player.team.to_param,
              'short_name' => mini_draft_pick1.in_player.team.short_name,
            ),
            'fpl_team' => a_hash_including(
              'id' => fpl_team1.to_param,
              'name' => fpl_team1.name,
            ),
            'position' => mini_draft_pick1.out_player.position.singular_name_short,
            'season' => 'Summer',
            'pick_number' => 1,
            'passed' => false,
          ),
          a_hash_including(
            'id' => mini_draft_pick2.to_param,
            'out_player' => nil,
            'in_player' => nil,
            'out_team' => nil,
            'in_team' => nil,
            'fpl_team' => a_hash_including(
              'id' => fpl_team2.to_param,
              'name' => fpl_team2.name,
            ),
            'position' => nil,
            'season' => 'Summer',
            'pick_number' => 2,
            'passed' => true,
          ),
        ],
      )

      api.get api_league_mini_draft_picks_url(league), params: { mini_draft_pick: { season: 'winter' } }

      expect(api.response).to have_http_status(:success)
      expect(api.data).to match(
        [
          a_hash_including(
            'id' => mini_draft_pick3.to_param,
            'out_player' => nil,
            'in_player' => nil,
            'out_team' => nil,
            'in_team' => nil,
            'fpl_team' => a_hash_including(
              'id' => fpl_team1.to_param,
              'name' => fpl_team1.name,
            ),
            'position' => nil,
            'season' => 'Winter',
            'pick_number' => 1,
            'passed' => true,
          ),
          a_hash_including(
            'id' => mini_draft_pick4.to_param,
            'out_player' => a_hash_including(
              'id' => mini_draft_pick4.out_player.to_param,
              'first_name' => mini_draft_pick4.out_player.first_name,
              'last_name' => mini_draft_pick4.out_player.last_name,
            ),
            'in_player' => a_hash_including(
              'id' => mini_draft_pick4.in_player.to_param,
              'first_name' => mini_draft_pick4.in_player.first_name,
              'last_name' => mini_draft_pick4.in_player.last_name,
            ),
            'out_team' => a_hash_including(
              'id' => mini_draft_pick4.out_player.team.to_param,
              'short_name' => mini_draft_pick4.out_player.team.short_name,
            ),
            'in_team' => a_hash_including(
              'id' => mini_draft_pick4.in_player.team.to_param,
              'short_name' => mini_draft_pick4.in_player.team.short_name,
            ),
            'fpl_team' => a_hash_including(
              'id' => fpl_team2.to_param,
              'name' => fpl_team2.name,
            ),
            'position' => mini_draft_pick4.out_player.position.singular_name_short,
            'season' => 'Winter',
            'pick_number' => 2,
            'passed' => false,
          ),
        ],
      )
    end
  end
end
