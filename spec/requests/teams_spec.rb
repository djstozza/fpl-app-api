require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe '/api/teams', type: :request do
  let!(:team1) { create(:team) }
  let!(:team2) { create(:team) }

  describe 'GET /index' do
    it 'renders a successful response' do
      api.get api_teams_url

      expect(response).to be_successful
      expect(api.data).to contain_exactly(
        {
          'id' => team1.to_param,
          'name' => team1.name,
          'short_name' => team1.short_name,
        },
        {
          'id' => team2.to_param,
          'name' => team2.name,
          'short_name' => team2.short_name,
        },
      )
    end
  end

  describe 'GET /show' do
    it 'renders a successful response' do
      api.get api_team_url(team1), as: :json
      expect(response).to be_successful

      expect(api.data).to eq(
        'id' => team1.to_param,
        'name' => team1.name,
        'short_name' => team1.short_name
      )
    end

    it 'returns a 404 if not found' do
      api.get api_team_url(team2.id + 1)

      expect(response).to have_http_status(404)
    end
  end
end
