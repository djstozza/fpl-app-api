require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe 'fpl_teams/:fpl_team_id/fpl_team_lists', :no_transaction, type: :request do
  let(:fpl_team) { create :fpl_team }

  before { api.authenticate(fpl_team.owner) }

  describe 'GET /index' do
    let(:round1) { create :round, deadline_time: 5.weeks.ago }
    let(:round2) { create :round, deadline_time: 4.weeks.ago }
    let(:round3) { create :round, deadline_time: 3.weeks.ago }
    let!(:fpl_team_list1) { create :fpl_team_list, fpl_team: fpl_team, round: round1 }
    let!(:fpl_team_list2) { create :fpl_team_list, fpl_team: fpl_team, round: round2 }
    let!(:fpl_team_list3) { create :fpl_team_list, fpl_team: fpl_team, round: round3 }

    it 'returns a list of fpl_team_lists for an fpl_team ordered by round deadline_time' do
      api.get api_fpl_team_lists_url, params: { fpl_team_list: { fpl_team_id: fpl_team.to_param } }

      expect(api.data).to match(
        [
          a_hash_including(
            'id' => fpl_team_list1.to_param,
            'round' => a_hash_including(
              'id' => round1.to_param,
            )
          ),
          a_hash_including(
            'id' => fpl_team_list2.to_param,
            'round' => a_hash_including(
              'id' => round2.to_param,
            )
          ),
          a_hash_including(
            'id' => fpl_team_list3.to_param,
            'round' => a_hash_including(
              'id' => round3.to_param,
            )
          ),
        ],
      )
    end
  end

  describe 'GET /show' do
    let(:fpl_team_list) { create :fpl_team_list, fpl_team: fpl_team }

    it 'returns the fpl_team_list' do
      api.get api_fpl_team_list_url(fpl_team_list)

      expect(api.data).to include(
        'id' => fpl_team_list.to_param,
        'round' => a_hash_including(
          'id' => fpl_team_list.round.to_param,
        )
      )
    end
  end

  describe 'PUT /update' do
    let(:round) { create :round, :current }
    let(:fpl_team_list) { create :fpl_team_list, fpl_team: fpl_team, round: round }
    let(:team1) { create :team }
    let(:team2) { create :team }
    let(:player1) { create :player, team: team1 }
    let(:player2) { create :player, team: team2 }

    let!(:fixture) { create :fixture, round: fpl_team_list.round, home_team: team1, away_team: team2 }

    let!(:list_position1) do
      create(
        :list_position,
        :starting,
        :forward,
        player: player1,
        fpl_team_list_id: fpl_team_list.id,
      )
    end
    let!(:list_position2) { create :list_position, :starting, :forward, fpl_team_list_id: fpl_team_list.id }
    let!(:list_position3) { create :list_position, :starting, :forward, fpl_team_list_id: fpl_team_list.id }
    let!(:list_position4) { create :list_position, :starting, :midfielder, fpl_team_list_id: fpl_team_list.id }
    let!(:list_position5) { create :list_position, :starting, :midfielder, fpl_team_list_id: fpl_team_list.id }
    let!(:list_position6) { create :list_position, :starting, :midfielder, fpl_team_list_id: fpl_team_list.id }
    let!(:list_position7) { create :list_position, :starting, :midfielder, fpl_team_list_id: fpl_team_list.id }
    let!(:list_position8) { create :list_position, :starting, :defender, fpl_team_list_id: fpl_team_list.id }
    let!(:list_position9) { create :list_position, :starting, :defender, fpl_team_list_id: fpl_team_list.id }
    let!(:list_position10) { create :list_position, :starting, :defender, fpl_team_list_id: fpl_team_list.id }
    let!(:list_position11) { create :list_position, :starting, :goalkeeper, fpl_team_list_id: fpl_team_list.id }
    let!(:list_position12) do
      create(
        :list_position,
        :substitute_1,
        :midfielder,
        player: player2,
        fpl_team_list_id: fpl_team_list.id,
      )
    end
    let!(:list_position13) { create :list_position, :substitute_2, :defender, fpl_team_list_id: fpl_team_list.id }
    let!(:list_position14) { create :list_position, :substitute_3, :defender, fpl_team_list_id: fpl_team_list.id }
    let!(:list_position15) { create :list_position, :substitute_gkp, :goalkeeper, fpl_team_list_id: fpl_team_list.id }

    it 'processes list position substitutions' do
      api.put api_fpl_team_list_url(fpl_team_list),
              params: {
                fpl_team_list: {
                  out_list_position_id: list_position1.id,
                  in_list_position_id: list_position12.id,
                },
              }

      expect(api.data).to match(
        [
          a_hash_including(
            'player' => a_hash_including(
              'id' => player2.to_param,
              'first_name' => player2.first_name,
              'last_name' => player2.last_name,
            ),
            'role_str' => 'Starting',
            'position' => player2.position.singular_name_short,
            'team' => a_hash_including(
              'id' => team2.to_param,
              'short_name' => team2.short_name,
            ),
            'opponent' => a_hash_including(
              'id' => fixture.home_team.to_param,
              'short_name' => fixture.home_team.short_name,
            ),
          ),
          a_hash_including(
            'player' => a_hash_including(
              'id' => player1.to_param,
              'first_name' => player1.first_name,
              'last_name' => player1.last_name,
            ),
            'role_str' => 'S1',
            'position' => player1.position.singular_name_short,
            'team' => a_hash_including(
              'id' => team1.to_param,
              'short_name' => team1.short_name,
            ),
            'opponent' => a_hash_including(
              'id' => fixture.away_team.to_param,
              'short_name' => fixture.away_team.short_name,
            ),
          ),
        ]
      )
    end
  end
end
